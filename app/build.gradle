plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.dagger.hilt.android'
}

apply plugin: "realm-android"

android {
    namespace 'ai.nextstop.opennews'
    compileSdk 33

    defaultConfig {
        applicationId "ai.nextstop.opennews"
        minSdk 25
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    lintOptions {
        disable 'ComposableNaming'
    }
}

kapt {
    correctErrorTypes = true
}

ext {
    compose_version = '1.3.3'
    ktx_version = '1.7.0'
    lifecycle_version = '2.5.1'
    activity_compose_version = '1.6.1'
    compose_material_version = '1.3.1'
    material3_version = '1.0.1'
    viewmodel_compose_version = '2.5.1'
    realm_version = '1.5.0'
    retrofit_version = '2.9.0'
    okhttp3_version = '4.10.0'
    coil_version = '2.2.2'
    gson_version = '2.10.1'
    rxandroid_version = '3.0.2'
    rxjava_version = '3.1.5'
    hiltworker_version = '1.0.0'
    work_version = "2.7.1"
    accompanist_version = '0.23.1'
    landscapist_fresco_version = '2.1.1'
    logger_intercepter_version = '3.1.0'
}

dependencies {
    implementation "androidx.core:core-ktx:$ktx_version"
    //lifecycle
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version") // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version") // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")     // LiveData
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")     // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version") // Annotation processor

    implementation "androidx.activity:activity-compose:$activity_compose_version"
    //compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation("androidx.compose.runtime:runtime:$compose_version")
    implementation("androidx.compose.runtime:runtime-livedata:$compose_version")
    implementation("androidx.compose.runtime:runtime-rxjava2:$compose_version")

    implementation("androidx.compose.material3:material3:$material3_version")
    implementation("androidx.compose.material3:material3-window-size-class:$material3_version")
    implementation 'androidx.wear.compose:compose-material:1.2.0-alpha01'
    implementation("androidx.compose.material:material:$compose_material_version")
    //accompanist

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //Realm
    implementation "io.realm.kotlin:library-base:$realm_version"

    //Rx
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    implementation(platform("com.squareup.okhttp3:okhttp-bom:$okhttp3_version"))
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")
    implementation "com.google.code.gson:gson:$gson_version"

    //Image loader
    implementation("io.coil-kt:coil-compose:$coil_version")
    implementation "com.github.skydoves:landscapist-fresco:$landscapist_fresco_version"

    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    //Hilt worker
    implementation("androidx.hilt:hilt-work:$hiltworker_version")
    kapt("androidx.hilt:hilt-compiler:$hiltworker_version")
    annotationProcessor("androidx.hilt:hilt-compiler:$hiltworker_version")
    //Worker
    implementation("androidx.work:work-runtime-ktx:$work_version")

    //Logger
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.orhanobut:logger:2.2.0'
}